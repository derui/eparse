########################################################################
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this file, to deal in the File without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the File, and to permit persons to whom the
# File is furnished to do so, subject to the following condition:
#
# THE FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE FILE OR
# THE USE OR OTHER DEALINGS IN THE FILE.

########################################################################
# The standard OMakefile.
# You will usually need to modify this file for your project.

# Delete this line once you have configured this file

########################################################################
# Phony targets are scoped, so you probably want to declare them first.
#

.STATIC:
	EMACS_EXISTS = $(CheckProg emacs)
	EMACS = $(if $(EMACS_EXISTS), emacs)

if $(not $(EMACS_EXISTS))
	eprintln(Not found emacs which any executable one)
	$(exit 1)

.PHONY: test clean

OPTIONS = -L $(absname $(dir .)) -L $(dir $(HOME)/.emacs.d/el-get/ert-expectations)

TARGET_FILES[] =
	eparse-base.el
	eparse-lexer.el
	eparse.el
	eparse-test.el

eparse-base.elc : eparse-base.el
	$(EMACS) -Q --batch -l bytecomp --eval '(batch-byte-compile-file "eparse-base.el")'

eparse-lexer.elc : eparse-lexer.el eparse-base.elc
	$(EMACS) -Q --batch -l bytecomp -L . --eval '(batch-byte-compile-file "eparse-lexer.el")'

eparse.elc : eparse.el eparse-lexer.elc
	$(EMACS) -Q --batch -l bytecomp -L . --eval '(batch-byte-compile-file "eparse.el")'

eparse-test.elc : eparse-test.el eparse.elc
	$(EMACS) -Q --batch -l bytecomp $(OPTIONS) --eval '(batch-byte-compile-file "eparse-test.el")'

.DEFAULT: $(addsuffix .elc, $(removesuffix $(TARGET_FILES)))

test : $(TARGET_FILES)
	$(EMACS) -Q --batch $(OPTIONS) -l eparse-test.elc

clean:
	rm -f *.elc
